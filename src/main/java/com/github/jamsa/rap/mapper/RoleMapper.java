package com.github.jamsa.rap.mapper;

import com.github.jamsa.rap.core.mapper.BaseMapper;
import com.github.jamsa.rap.model.Resource;
import com.github.jamsa.rap.model.Role;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;

import java.util.List;

@Mapper
public interface RoleMapper extends BaseMapper<Role, Integer> {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table RAP_ROLE
     *
     * @mbggenerated Thu Aug 25 14:35:40 CST 2016
     */
    int deleteByPrimaryKey(Integer roleId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table RAP_ROLE
     *
     * @mbggenerated Thu Aug 25 14:35:40 CST 2016
     */
    int insert(Role record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table RAP_ROLE
     *
     * @mbggenerated Thu Aug 25 14:35:40 CST 2016
     */
    int insertSelective(Role record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table RAP_ROLE
     *
     * @mbggenerated Thu Aug 25 14:35:40 CST 2016
     */
    Role selectByPrimaryKey(Integer roleId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table RAP_ROLE
     *
     * @mbggenerated Thu Aug 25 14:35:40 CST 2016
     */
    int updateByPrimaryKeySelective(Role record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table RAP_ROLE
     *
     * @mbggenerated Thu Aug 25 14:35:40 CST 2016
     */
    int updateByPrimaryKey(Role record);

    /** @mbggenerated */
    List<Role> selectByCondition(Role condition);

    /**
     * 获取角色的所有资源
     * @param roleId
     * @return
     */
    List<Resource> selectRoleResources(Integer roleId);

    /**
     * 删除用户与角色关系表中的角色记录
     * @param roleId
     * @return
     */
    int deleteUserRoles(Integer roleId);

    /**
     * 删除角色的部分资源
     * @param roleId
     * @param resources
     * @return
     */
    int deleteRoleResources(@Param("roleId") Integer roleId,@Param("resourceIds") List<Integer> resourceIds);

    /**
     * 向角色添加资源
     * @param roleId
     * @param resources
     * @return
     */
    int insertRoleResources(@Param("roleId") Integer roleId,@Param("resourceIds") List<Integer> resourceIds);

    /**
     * 删除角色的所有资源
     * @param roleId
     * @return
     */
    //int deleteRoleAllResources(Integer roleId);

}